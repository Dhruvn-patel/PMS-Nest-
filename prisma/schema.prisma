// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  userRoles UserRoles[]
}

model Roles {
  id               Int                @id @default(autoincrement())
  rolename         String
  roles            UserRoles[]
  Rolespermissions RolesPermissions[]
}

model UserRoles {
  id      Int    @id @default(autoincrement())
  User    User?  @relation(fields: [userId], references: [id])
  userId  Int?
  Roles   Roles? @relation(fields: [rolesId], references: [id])
  rolesId Int?   @default(2)
}

model Permissions {
  id               Int                @id @default(autoincrement())
  permissionName   String
  RolesPermissions RolesPermissions[]
}

model RolesPermissions {
  id            Int          @id @default(autoincrement())
  Roles         Roles?       @relation(fields: [rolesId], references: [id])
  rolesId       Int?
  Permissions   Permissions? @relation(fields: [permissionsId], references: [id])
  permissionsId Int?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @default(now()) @updatedAt
}

model Product {
  id              Int               @id @default(autoincrement())
  ProductName     String
  description     String?
  image           String            @default("")
  price           Int               @default(0)
  createdAt       DateTime?         @default(now())
  updatedAt       DateTime?         @default(now())
  deletedAt       DateTime?
  ProductCategory ProductCategory[]
}

model Categories {
  id              Int               @id @default(autoincrement())
  name            String
  createdAt       DateTime?         @default(now())
  updatedAt       DateTime?         @default(now())
  deletedAt       DateTime?
  ProductCategory ProductCategory[]
}

model ProductCategory {
  Categories   Categories? @relation(fields: [categoriesId], references: [id])
  categoriesId Int
  Product      Product?    @relation(fields: [productId], references: [id])
  productId    Int

  @@id([productId, categoriesId])
}
